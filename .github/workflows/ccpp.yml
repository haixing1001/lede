name: Build LEDE

on:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede.git
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
    - name: 自定义插件
      run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages|
          git clone https://github.com/project-openwrt/luci-app-koolproxyR.git
    - name: Update feeds
      run: |
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
    - name: Generate configuration file
      run: |
          rm -f ./.config*
          touch ./.config
          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_ramips=y
          CONFIG_TARGET_ramips_mt7621=y
          CONFIG_TARGET_ramips_mt7621_DEVICE_d-team_newifi-d2=y
          EOF
          # 固件压缩:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          EOF
          # 编译UEFI固件:
          # cat >> .config <<EOF
          # CONFIG_EFI_IMAGES=y
          # EOF
          # IPv6支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=n
          CONFIG_PACKAGE_ipv6helper=n
          EOF
          # 多文件系统支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-fs-nfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common=y
          CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          CONFIG_PACKAGE_kmod-fs-squashfs=y
          EOF
          # USB3.0支持:
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          EOF
          # 常用LuCI插件选择:
          cat >> .config <<EOF
          CONFIG_PACKAGE_autosamba=y
          CONFIG_PACKAGE_automount=y
          CONFIG_PACKAGE_ddns-scripts_dnspod=y
          CONFIG_PACKAGE_luci-app-adbyby-plus=y
          CONFIG_PACKAGE_luci-app-frpc=n
          CONFIG_PACKAGE_libustream-openssl=y
          CONFIG_PACKAGE_luci-app-wol=n
          CONFIG_PACKAGE_luci-i18n-wol-zh-cn=n
          CONFIG_PACKAGE_luci-app-pptp-server=n
          CONFIG_PACKAGE_luci-app-hd-idle=y
          CONFIG_PACKAGE_luci-app-kodexplorer=y
          CONFIG_PACKAGE_luci-app-openvpn=n
          CONFIG_PACKAGE_luci-app-openvpn-server=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=n
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=n
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=n
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=n
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssrserver-python=y
          CONFIG_PACKAGE_luci-app-v2ray-server=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_DEFAULT_luci-app-nlbwmon=y
          CONFIG_PACKAGE_luci-app-netdata=y
          CONFIG_PACKAGE_luci-app-hd-idle=y
          # CONFIG_PACKAGE_luci-app-smartdns=y
          CONFIG_PACKAGE_luci-app-familycloud=n
          CONFIG_PACKAGE_luci-app-koolproxyR=y
          CONFIG_PACKAGE_luci-app-mwan3=n
          CONFIG_PACKAGE_luci-app-mwan3helper=n
          CONFIG_PACKAGE_luci-app-syncdial=n
          CONFIG_PACKAGE_luci-app-unblockmusic=n
          CONFIG_PACKAGE_luci-app-arpbind=y
          CONFIG_PACKAGE_luci-app-zerotier=n
          EOF
          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-netgear=y
          EOF
          # 常用软件包:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_curl=y
          # CONFIG_PACKAGE_htop=y
          # CONFIG_PACKAGE_nano=y
          # CONFIG_PACKAGE_screen=y
          # CONFIG_PACKAGE_tree=y
          # CONFIG_PACKAGE_vim-fuller=y
          # CONFIG_PACKAGE_wget=y
          # EOF
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          # cat >> .config <<EOF
          # # CONFIG_TARGET_IMAGES_PAD is not set
          # # CONFIG_VMDK_IMAGES is not set
          # EOF
          #
          # ========================固件定制部分结束========================
          #
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
    - name: Make download
      run: |
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h
    - name: Compile firmware
      run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
    - name: Prepare artifact
      run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find ./bin/targets/ -name "*config*" | xargs -i mv -f {} ./artifact/
          find ./bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt firmware
        path: ./artifact/
